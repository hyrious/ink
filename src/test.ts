// This file is used to do experiments quickly.
// Run it with: npx @hyrious/esbuild-dev src/test.ts

import { Stroke } from './ink'

declare global {
  interface Array<T> {
    cons(n: number): T[][]
  }
}

Array.prototype.cons = function cons<T>(n: number): T[][] {
  let result: T[][] = []
  for (let i = 0; i < this.length; i += n) {
    result.push(this.slice(i, i + n))
  }
  return result
}

let t0 = performance.now()
let stroke = Stroke.fromJSON(
  [596.208,291.264,593.383,274.039,591.745,267.211,590.113,261.863,589.155,259.47,587.99,257.146,586.692,255.216,585.259,253.513,583.386,252.056,581.12,251.076,578.177,250.981,574.673,251.66,570.913,253.616,566.617,257.304,561.607,263.141,556.481,270.468,551.17,279.589,546.819,289.631,543.368,299.872,540.72,309.835,538.67,319.442,537.303,327.808,536.705,335.061,536.649,340.464,537.086,344.379,537.612,346.954,538.382,348.647,539.498,349.813,541.335,350.332,544.944,349.348,549.567,346.125,555.321,340.262,561.182,332.007,566.493,323.05,571.517,314.197,575.87,306.839,579.239,301.045,581.652,296.78,583.415,293.628,584.512,291.831,585.297,290.784,585.81,290.248,586.104,289.954,587.162,292.212,587.277,296.521,586.921,304.115,586.245,314.888,585.854,325.588,585.974,335.975,586.51,344.775,587.519,351.678,588.953,357.171,591.362,361.702,594.352,364.987,597.935,366.783,601.943,366.905,606.808,364.887,614.127,358.976,622.788,349.646,633.055,336.721,642.708,322.747,651.528,307.755,660.742,291.782,670.087,274.899,679.938,257.935,689.458,240.84,699.139,223.225,708.32,206.111,717.441,190.857,725.086,176.257,730.791,162.1,734.712,149.44,737.304,138.184,738.57,129.687,738.926,123.028,738.593,117.508,737.795,113.03,736.738,109.269,735.493,106.367,734.195,104.218,732.747,102.736,731.203,101.796,729.209,101.427,726.488,102.235,722.873,104.94,716.895,112.81,708.457,125.739,699.344,141.821,691.788,157.25,684.378,172.89,677.628,189.987,671.562,208.024,665.456,227.233,658.912,248.115,652.909,271.6,647.854,297.314,643.346,326.151,639.222,356.514,636.338,387.5,634.892,417.014,634.519,444.102,635.648,467.912,637.257,488.896,638.938,506.531,640.551,521.791,642.741,534.549,644.584,543.248,645.509,547.808,645.876,549.76,645.907,550.329,645.907,550.595,645.27,544.339,643.315,533.512,640.756,518.908,637.769,501.336,634.96,484.597,632.388,466.727,630.135,447.493,627.94,427.171,626.142,406.602,625.047,388.152,624.469,371.861,624.132,356.576,624.179,342.005,624.506,327.077,625.058,312.165,625.839,297.75,626.556,284.929,626.949,275.401,627.066,269.102,626.996,265.295,626.987,263.13,626.987,262.094,626.987,261.599,626.987,261.552,628.431,265.704,630.926,273.673,635.688,285.73,642.025,298.406,649.544,310.58,659.054,321.692,670.389,331.842,683.705,340.284,698.894,346.744,714.434,349.809,735.325,351.843,737.31,352.022]
  .cons(2).map(([x, y]) => [x, y, 0.5])
)

// console.log(`Finished in ${(performance.now() - t0).toFixed(3)}ms`)

stroke.outline(stroke.sections[1], 10)
console.log(`Finished in ${(performance.now() - t0).toFixed(3)}ms`)
